@model IList<JEDCMobilityManager.Utility.Area>
@{
    ViewData["Title"] = "Home Page";
}

@section head {
    <link href="https://unpkg.com/maplibre-gl/dist/maplibre-gl.css" rel="stylesheet" />
    <script src="https://unpkg.com/maplibre-gl/dist/maplibre-gl.js"></script>
    <script>
        customElements.define("x-map", class xMap extends HTMLElement {
            constructor() { super(); }
            get latitude() { return parseFloat(this.getAttribute("latitude")) || 0; }
            get longitude() { return parseFloat(this.getAttribute("longitude")) || 0; }
            get zoom() { return parseFloat(this.getAttribute("zoom")) || 5; }
            layers = {};
            connectedCallback() {
                this.map = new maplibregl.Map({
                    container: this,
                    style: "https://demotiles.maplibre.org/style.json",
                    center: [this.longitude, this.latitude],
                    zoom: this.zoom
                });
                this.map.addControl(new maplibregl.NavigationControl());
                setTimeout(function () {
                    this.map.on("load", this.switchLayer.bind(this, this.#readChildData()));
                }.bind(this));
            }
            switchLayer(name) {
                this.map.addSource(name, {
                    type: "geojson",
                    data: this.layers[name]
                });
                this.map.addLayer({
                    id: name,
                    type: "fill",
                    source: name,
                    layout: {},
                    paint: {
                        "fill-color": "#088",
                        "fill-opacity": 0.5
                    }
                });
                this.map.addLayer({
                    id: name + "-outline",
                    type: "line",
                    source: name,
                    layout: {},
                    paint: {
                        "line-color": "#000",
                        "line-width": 2
                    }
                });
            }
            #readChildData() {
                return this.querySelectorAll("script[type='text/geojson']").reduce(function (name, script) {
                    name = script.getAttribute("name");
                    this.layers[name] = JSON.parse(script.textContent);
                    script.remove();
                    return name;
                }.bind(this), null);
            }
        });
    </script>
}

<x-map style="height: 700px; width: 700px; resize: both;  display: block;" latitude="58.3005" longitude="-134.4201" zoom="5">
    <script type="text/geojson" name="RD" title="Ranger Districts"> {
        "type": "FeatureCollection",
        "features": [ @Html.Raw(string.Join(',', Model.Select(feature => $@"{{
            ""type"": ""Feature"",
            ""properties"": {{ ""name"": ""{feature.Name}"" }},
            ""geometry"": {feature.GeoJson}
        }}"))) ]
    } </script>
</x-map>
