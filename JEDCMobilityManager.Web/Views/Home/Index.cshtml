@model HomeController
@{
    ViewData["Title"] = "Mobility Statistics";
}

@section head {
    <link href="https://unpkg.com/maplibre-gl/dist/maplibre-gl.css" rel="stylesheet" />
    <script src="https://unpkg.com/maplibre-gl/dist/maplibre-gl.js"></script>
    <script>
        window.layers = {};
        customElements.define("x-map", class xMap extends HTMLElement {
            constructor() { super(); }
            get latitude() { return parseFloat(this.getAttribute("latitude")) || 0; }
            get longitude() { return parseFloat(this.getAttribute("longitude")) || 0; }
            get zoom() { return parseFloat(this.getAttribute("zoom")) || 5; }
            connectedCallback() {
                this.map = new maplibregl.Map({
                    container: this,
                    style: "https://demotiles.maplibre.org/style.json",
                    center: [this.longitude, this.latitude],
                    zoom: this.zoom
                });
                this.map.addControl(new maplibregl.NavigationControl());
            }
            switchLayer(name, data) {
                this.map.on("load", function () {
                    this.map.addSource(name, {
                        type: "geojson",
                        data: data
                    });
                    this.map.addLayer({
                        id: name,
                        type: "fill",
                        source: name,
                        layout: {},
                        paint: {
                            "fill-color": "#088",
                            "fill-opacity": 0.5
                        }
                    });
                    this.map.addLayer({
                        id: name + "-outline",
                        type: "line",
                        source: name,
                        layout: {},
                        paint: {
                            "line-color": "#000",
                            "line-width": 2
                        }
                    });

                }.bind(this));
            }
        });
        document.addEventListener("click", function (e) {
            if (!e.target.matches("#featureTypeSelect > :not([selected])")) return;
            featureTypeSelect.children.forEach(function (a) {
                a.removeAttribute("selected");
            });
            e.target.setAttribute("selected", "selected");
        });

        function switchFeatures (name) {
            var layer = window.layers[name];
            document.querySelectorAll("x-map").forEach(function (a) { a.switchLayer(name, layer); });
            var overviewBody = overview.querySelector("tbody");
            overviewBody.innerHTML = "";
            layer.features.forEach(function (feature) {
                var row = document.createElement("tr");
                overviewBody.appendChild(row);
                cell(feature.properties.name);
                cell(feature.properties.residents);
                cell(feature.properties.visitors);
                cell(feature.properties.residents + feature.properties.visitors);


                function cell(text) {
                    var cell = document.createElement("td");
                    row.appendChild(cell);
                    cell.innerText = text;
                }
            });
        }
    </script>
    <script>
        window.layers["RD"] = @Html.Raw(Model.Features("RD"));
        document.addEventListener("DOMContentLoaded", function () {
            switchFeatures("RD");
            fetch("@Url.Action("FeatureStatistics")/RD").then(function (response) {
                if (!response.ok)
                    throw new Error(`HTTP error! status: ${response.status}`);
                return response.json();
            }).then(function (data) {
                document.querySelectorAll("table[statistics]").forEach(function (table) {
                    (function (c) { table.innerHTML = ""; table.appendChild(c); })(table.querySelector("caption"));
                    (function (part) {
                        var ks = Object.keys(part[0]);
                        (function(r) {
                            table.appendChild(r);
                            ks.forEach(function (k) {
                                var c = document.createElement("th");
                                r.appendChild(c);
                                c.innerText = k;
                            });
                        })(document.createElement("tr"));
                        part.forEach(function (item) {
                            var r = document.createElement("tr");
                            table.appendChild(r);
                            ks.forEach(function(k) {
                                var c = document.createElement("td");
                                r.appendChild(c);
                                c.innerText = item[k];
                            });
                        });
                    })(data[table.getAttribute("statistics")]);
                });
            }).catch(function (error) {
                console.error("Error fetching data:", error);
            });
        });
    </script>
    <style>
        .All {
            --favorite-color: #888;
        }

        .RD {
            --favorite-color: #088;
        }

        #featureTypeSelect {
            border-bottom: 1px solid #333;
            font-weight: bold;
        }

        #featureTypeSelect > * {
            padding: 5px 10px;
            border-bottom: 2px solid var(--favorite-color);
            box-shadow: inset 0 -10px 20px -10px var(--favorite-color);
            transition: border-width 0.1s, padding 0.1s;
        }

        #featureTypeSelect > :not([selected]) {
            cursor: pointer;
        }

        #featureTypeSelect > :is(:hover, [selected]) {
            border-bottom-width: 5px;
            padding-bottom: 2px;
        }
    </style>
}

<h1>Mobility Statistics</h1>
<flex id="featureTypeSelect">
    <div class="All">All</div>
    <div class="RD" selected="selected">Ranger Districts</div>
</flex>
<flex>
    <x-map style="height: 700px; width: 700px; resize: both;  display: block;" latitude="58.3005" longitude="-134.4201" zoom="5"></x-map>
    <table id="overview">
        <caption>Overview:</caption>
        <thead>
        <th></th>
        <th>Residents</th>
        <th>Visitors</th>
        <th>Total</th>
        </thead>
        <tbody></tbody>
    </table>
</flex>
<table statistics="MonthTotals">
    <caption>Monthly Totals</caption>
</table>
<table statistics="AvgHourly">
    <caption>Average Hourly</caption>
</table>